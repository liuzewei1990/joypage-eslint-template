/**
 * 配置帮助文档：https://www.typescriptlang.org/tsconfig#
 */

{
    "compilerOptions": {
        // 指定ts被编译为的es的版本，值：'es3', 'es5', 'es6', 'es2015', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'es2021', 'es2022', 'esnext'
        "target": "esnext",
        // 指定要使用的模块化的规范，值为：'none', 'commonjs', 'amd', 'system', 'umd', 'es6', 'es2015', 'es2020', 'es2022', 'esnext', 'node16', 'nodenext'
        "module": "esnext",

        // 所有严格检查的总开关
        "strict": true,
        // 不允许出现隐式的 any 类型
        "noImplicitAny": false,
        // 如果关闭此选项，则 null 和 undefined 两种类型是任意类型的子类型
        "strictNullChecks": false,
        // 严格型检查
        "strictFunctionTypes": true,
        // 在使用 bind、call 和 apply 语法的时候，是否进行参数检查
        "strictBindCallApply": true,
        // 严格类的属性初始化检查。这个选项要和 strictNullChecks 配合使用才行
        "strictPropertyInitialization": false,
        // 不允许出现隐式any类型的this
        "noImplicitThis": false,
        // 是否开启严格模式。这个不用多说，就是 JavaScript 中的 "use strict"
        "alwaysStrict": true,

        // 删除注释
        "removeComments": true,
        "jsx": "preserve",
        "moduleResolution": "node",
        "skipLibCheck": true,
        "esModuleInterop": true,
        "allowSyntheticDefaultImports": true,
        "forceConsistentCasingInFileNames": true,
        "useDefineForClassFields": true,
        "sourceMap": true,
        "baseUrl": ".",
        "types": ["webpack-env"],
        "paths": {
            "@/*": ["src/*"]
        },
        // 用来指定项目中要用的库，前端运行代码不需要改变其默认值
        "lib": ["esnext", "dom", "dom.iterable", "scripthost"]
    },
    "include": ["src/**/*.ts", "src/**/*.tsx", "src/**/*.vue", "tests/**/*.ts", "tests/**/*.tsx"],
    "exclude": ["node_modules"]
}
